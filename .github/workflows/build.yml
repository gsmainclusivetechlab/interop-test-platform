name: CI

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'develop'

env:
  TEST_TAG: gsmainclusivetechlab/interop-test-platform:latest

jobs:
  build:
    name: Build image and push to Docker Hub
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Generating Dockerfile
        run: yarn prepare:docker

      - name: Copying configuration file
        env:
          HOST_WEB_PORT: 80
          HOST_HTTPS_WEB_PORT: 443
          PROJECT_DOMAIN: www.example.com
          HOST_MAILHOG_PORT: 8080
          HOST_PHPMYADMIN_PORT: 8081
          DB_DATABASE: itp-test
          DB_USERNAME: itp-test-user
          DB_PASSWORD: itp-test-pw
        run: envsubst < service.example.env > service.env

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: gsmainclusivetechlab/interop-test-platform
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{raw}}
            type=semver,pattern={{version}}

      - name: Building ${{ steps.meta.outputs.tags }}
        uses: docker/build-push-action@v3
        with:
          context: src
          file: Dockerfiles/production.Dockerfile
          tags: ${{ env.TEST_TAG }}

      - name: Running tests and getting coverage report
        run: |
          docker-compose -f docker-compose.ci.yml run app sh -c "/wait && cd /var/www && mv html src && cd src && phpdbg -qrr vendor/bin/phpunit -d memory_limit=512M --coverage-clover=results/clover.xml --log-junit results/results.xml"
          docker cp $(docker ps -alq):/var/www/src/results .
          docker-compose -f docker-compose.ci.yml down -v

      - name: Sending coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./results/clover.xml
          fail_ci_if_error: true
          #verbose: true

      - name: Pushing to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: src
          file: Dockerfiles/production.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
