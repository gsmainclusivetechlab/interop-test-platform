name: P2P Send Rejected
slug: mowali-p2p-send-rejected
use_case: P2P
behavior: negative
description: |
  This testcase simulates a scenario where the Payer would like to send money
  to a Payee but each of them uses different providers. This flow shows the
  steps involved in a _rejected_ P2P "send" transaction.
precondition: |
  - DFSP 1 and DFSP 2 exist in Mojaloop as Participants.
  - The following values are set in the session environment:
    - `SUT_OAUTH_TOKEN`
    - `SUT_FSPIOP`
    - `SUT_PARTY_MSISDN`
    - `REMOTE_OAUTH_TOKEN`
    - `REMOTE_FSPIOP`
    - `REMOTE_PARTY_MSISDN`
  - Required Parameters for Execution:
    - Transfer Amount: 502 GHS
components:
  - name: Mobile Money Operator 1
    slug: mmo-1
  - name: Mojaloop
    slug: mojaloop
  - name: Mobile Money Operator 2
    slug: mmo-2
test_steps:
  ## 1 POST/Quotes: MMO1 -> Mojaloop ##
  - path: /quotes
    pattern: 'quotes$'
    method: POST
    source: Mobile Money Operator 1
    target: Mojaloop
    # TODO: when this request is simulated, the relative uri fails to match against the api spec path
    # api_spec: Mojaloop v1.0
    trigger:
      amount:
        amount: '502'
    test_request_scripts:
      - name: Mandatory IDs is present
        rules:
          body.quoteId: 'required|regex:/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/'
          body.transactionId: 'required|regex:/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/'
      - name: Transaction Type is a P2P Transfer
        rules:
          body.transactionType.scenario: 'required|in:TRANSFER'
          body.transactionType.initiator: 'required|in:PAYER'
          body.transactionType.initiatorType: 'required|in:CONSUMER'
      - name: Payer wants to send money to Payee
        rules:
          body.amountType: 'required|in:SEND'
      - name: Payer and Payee parties are present and valid in the network
        rules:
          body.payer.partyIdInfo.partyIdType: 'required|in:MSISDN'
          body.payee.partyIdInfo.partyIdType: 'required|in:MSISDN'
          body.payer.partyIdInfo.partyIdentifier: 'required|in:${SUT_PARTY_MSISDN}'
          body.payee.partyIdInfo.partyIdentifier: 'required|in:${REMOTE_PARTY_MSISDN}'
      - name: Amount and currency are specified correctly
        rules:
          body.amount.amount: 'required|in:502'
          body.amount.currency: 'required|regex:/^[A-Z]{3}/'
    test_response_scripts:
      - name: Transaction was successfully accepted
        rules:
          status: 'required|in:202'
    request:
      method: POST
      uri: quotes
      headers:
        accept: 'application/vnd.interoperability.quotes+json;version=1.0'
        content-type: 'application/vnd.interoperability.quotes+json;version=1.0'
        Date: '${{ "now" | date("D, d M Y H:i:s O")}}'
        Authorization: Bearer ${SUT_OAUTH_TOKEN}
        FSPIOP-Source: ${SUT_FSPIOP}
        FSPIOP-Destination: ${REMOTE_FSPIOP}
      body:
        quoteId: '{{ uuidv4() }}'
        transactionId: '{{ uuidv4() }}'
        payee:
          name: 'Jane Dobie'
          partyIdInfo:
            partyIdType: 'MSISDN'
            partyIdentifier: '${REMOTE_PARTY_MSISDN}'
            fspId: ${REMOTE_FSPIOP}
        payer:
          partyIdInfo:
            partyIdType: 'MSISDN'
            partyIdentifier: '${SUT_PARTY_MSISDN}'
            fspId: ${SUT_FSPIOP}
          personalInfo:
            complexName:
              firstName: 'John'
              middleName: 'Jane'
              lastName: 'Doe'
            dateOfBirth: '2000-01-01'
        amountType: 'SEND'
        amount:
          currency: 'GHS'
          amount: '502'
        transactionType:
          scenario: 'TRANSFER'
          initiator: 'PAYER'
          initiatorType: 'CONSUMER'
    response:
      status: 202

  ## 2 POST/Quotes: Mojaloop -> MMO2 ##
  - path: /quotes
    pattern: 'quotes$'
    method: POST
    source: Mojaloop
    target: Mobile Money Operator 2
    # TODO: when this request is simulated, the relative uri fails to match against the api spec path
    # api_spec: Mojaloop v1.0
    trigger:
      amount:
        amount: '502'
    test_request_scripts:
      - name: Mandatory IDs is present
        rules:
          body.quoteId: 'required|regex:/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/'
          body.transactionId: 'required|regex:/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/'
      - name: Transaction Type is a P2P Transfer
        rules:
          body.transactionType.scenario: 'required|in:TRANSFER'
          body.transactionType.initiator: 'required|in:PAYER'
          body.transactionType.initiatorType: 'required|in:CONSUMER'
      - name: Payer wants to send money to Payee
        rules:
          body.amountType: 'required|in:SEND'
      - name: Payer and Payee parties are present and valid in the network
        rules:
          body.payer.partyIdInfo.partyIdType: 'required|in:MSISDN'
          body.payee.partyIdInfo.partyIdType: 'required|in:MSISDN'
          body.payer.partyIdInfo.partyIdentifier: 'required|in:${SUT_PARTY_MSISDN}'
          body.payee.partyIdInfo.partyIdentifier: 'required|in:${REMOTE_PARTY_MSISDN}'
      - name: Amount and currency are specified correctly
        rules:
          body.amount.amount: 'required|in:502'
          body.amount.currency: 'required|regex:/^[A-Z]{3}/'
    test_response_scripts:
      - name: Transaction was successfully accepted
        rules:
          status: 'required|in:202'
    request:
      method: POST
      uri: quotes
      headers:
        accept: 'application/vnd.interoperability.quotes+json;version=1.0'
        content-type: 'application/vnd.interoperability.quotes+json;version=1.0'
        Date: '${{ "now" | date("D, d M Y H:i:s O")}}'
        FSPIOP-Source: ${SUT_FSPIOP}
        FSPIOP-Destination: ${REMOTE_FSPIOP}
      body:
        # TODO: forward whole payload from previous step
        quoteId: '{{ steps.1.request.body.quoteId }}'
        transactionId: '{{ steps.1.request.body.transactionId }}'
        payee:
          name: '{{ steps.1.request.body.payee.name }}'
          partyIdInfo:
            partyIdType: 'MSISDN'
            partyIdentifier: '${REMOTE_PARTY_MSISDN}'
            fspId: ${REMOTE_FSPIOP}
        payer:
          partyIdInfo:
            partyIdType: 'MSISDN'
            partyIdentifier: '${SUT_PARTY_MSISDN}'
            fspId: ${SUT_FSPIOP}
          personalInfo:
            complexName:
              firstName: 'John'
              middleName: 'Jane'
              lastName: 'Doe'
            dateOfBirth: '2000-01-01'
        amountType: 'SEND'
        amount:
          currency: 'GHS'
          amount: '502'
        transactionType:
          scenario: 'TRANSFER'
          initiator: 'PAYER'
          initiatorType: 'CONSUMER'
    response:
      status: 202

  ## 3 PUT/Quotes/{ID}/error:  Mojaloop <- MMO2 ##
  - path: /quotes/{ID}/error
    # TODO: match exact ID from previous step variables
    pattern: 'quotes/[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}/error$'
    method: PUT
    source: Mobile Money Operator 2
    target: Mojaloop
    # TODO: when this request is simulated, the relative uri fails to match against the api spec path
    # api_spec: Mojaloop v1.0
    trigger:
      errorInformation:
        errorCode: '5103'

    test_request_scripts:
      - name: ID is Correct
        rules:
          path: 'required|in:quotes/{{ steps.2.request.body.quoteId }}/error'
      - name: Error Code is specified correctly
        rules:
          body.errorInformation.errorCode: 'required|in:5103'
          body.errorInformation.errorDescription: 'required|regex:/^.{1,128}$/'

    test_response_scripts:
      - name: Error was successfully handled
        rules:
          status: 'required|in:200'

    request:
      method: 'PUT'
      uri: quotes/{{ steps.2.request.body.quoteId }}/error
      headers:
        accept: 'application/vnd.interoperability.quotes+json;version=1.0'
        content-type: 'application/vnd.interoperability.quotes+json;version=1.0'
        date: '${{ "now" | date("D, d M Y H:i:s O")}}'
        Authorization: Bearer ${REMOTE_OAUTH_TOKEN}
        FSPIOP-Source: ${REMOTE_FSPIOP}
        FSPIOP-Destination: ${SUT_FSPIOP}
      body:
        quoteId: '{{ steps.2.request.body.quoteId }}'
        errorInformation:
          errorCode: '5103'
          errorDescription:
            'Rejected Quote: Payee FSP does not want to proceed with the
            financial transaction after receiving a quote.'
        expiration:
          '{{ "now" | date_modify("+1 day") | date("Y-m-d\\TH:i:s.vP") }}'
        # TODO: make ilp packet and condition dynamic
        ilpPacket: 'AQAAAAAAAADIEHByaXZhdGUucGF5ZWVmc3CCAiB7InRyYW5zYWN0aW9uSWQiOiIyZGY3NzRlMi1mMWRiLTRmZjctYTQ5NS0yZGRkMzdhZjdjMmMiLCJxdW90ZUlkIjoiMDNhNjA1NTAtNmYyZi00NTU2LThlMDQtMDcwM2UzOWI4N2ZmIiwicGF5ZWUiOnsicGFydHlJZEluZm8iOnsicGFydHlJZFR5cGUiOiJNU0lTRE4iLCJwYXJ0eUlkZW50aWZpZXIiOiIyNzcxMzgwMzkxMyIsImZzcElkIjoicGF5ZWVmc3AifSwicGVyc29uYWxJbmZvIjp7ImNvbXBsZXhOYW1lIjp7fX19LCJwYXllciI6eyJwYXJ0eUlkSW5mbyI6eyJwYXJ0eUlkVHlwZSI6Ik1TSVNETiIsInBhcnR5SWRlbnRpZmllciI6IjI3NzEzODAzOTExIiwiZnNwSWQiOiJwYXllcmZzcCJ9LCJwZXJzb25hbEluZm8iOnsiY29tcGxleE5hbWUiOnt9fX0sImFtb3VudCI6eyJjdXJyZW5jeSI6IlVTRCIsImFtb3VudCI6IjIwMCJ9LCJ0cmFuc2FjdGlvblR5cGUiOnsic2NlbmFyaW8iOiJERVBPU0lUIiwic3ViU2NlbmFyaW8iOiJERVBPU0lUIiwiaW5pdGlhdG9yIjoiUEFZRVIiLCJpbml0aWF0b3JUeXBlIjoiQ09OU1VNRVIiLCJyZWZ1bmRJbmZvIjp7fX19'
        condition: 'HOr22-H3AfTDHrSkPjJtVPRdKouuMkDXTR4ejlQa8Ks'
    response:
      status: 200

  ## 4 PUT/Quotes/{ID}/error: MMO1 <- Mojaloop ##
  - path: /quotes/{ID}/error
    # TODO: match exact ID from previous step variables
    pattern: 'quotes/[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}/error$'
    method: PUT
    source: Mojaloop
    target: Mobile Money Operator 1
    # TODO: when this request is simulated, the relative uri fails to match against the api spec path
    # api_spec: Mojaloop v1.0
    trigger:
      errorInformation:
        errorCode: '5103'

    test_request_scripts:
      - name: ID is Correct
        rules:
          path: 'required|in:quotes/{{ steps.3.request.body.quoteId }}/error'
      - name: Error Code is specified correctly
        rules:
          body.errorInformation.errorCode: 'required|in:5103'
          body.errorInformation.errorDescription: 'required|regex:/^.{1,128}$/'

    test_response_scripts:
      - name: Error was successfully handled
        rules:
          status: 'required|in:200'

    request:
      method: 'PUT'
      uri: quotes/{{ steps.3.request.body.quoteId }}/error
      headers:
        accept: 'application/vnd.interoperability.quotes+json;version=1.0'
        content-type: 'application/vnd.interoperability.quotes+json;version=1.0'
        date: '${{ "now" | date("D, d M Y H:i:s O")}}'
        Authorization: Bearer ${REMOTE_OAUTH_TOKEN}
        FSPIOP-Source: ${REMOTE_FSPIOP}
        FSPIOP-Destination: ${SUT_FSPIOP}
      body:
        quoteId: '{{ steps.3.request.body.quoteId }}'
        errorInformation:
          errorCode: '{{ steps.3.request.body.errorInformation.errorCode }}'
          errorDescription:
            '{{ steps.3.request.body.errorInformation.errorDescription }}'
        expiration: '{{ steps.3.request.body.expiration }}'
        ilpPacket: '{{ steps.3.request.body.ilpPacket }}'
        condition: '{{ steps.3.request.body.condition }}'
    response:
      status: 200
