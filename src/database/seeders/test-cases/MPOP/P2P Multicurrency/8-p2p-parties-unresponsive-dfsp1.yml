x-aliases:
  meta:
    common: &meta-common
      mtls: true
      api_spec: Mojaloop v1.0
    mowali-dfsp2: &mowali-dfsp2-meta
      <<: *meta-common
      source: mowali
      target: dfsp2
    mowali-dfsp1: &mowali-dfsp1-meta
      <<: *meta-common
      source: mowali
      target: dfsp1
    dfsp2-mowali: &dfsp2-mowali-meta
      <<: *meta-common
      source: dfsp2
      target: mowali
    dfsp1-mowali: &dfsp1-mowali-meta
      <<: *meta-common
      source: dfsp1
      target: mowali
  common-scripts:
    auth-header: &test-auth-header
      name: Authorization header must be provided
      rules:
        headers.authorization: 'required'
    status:
      202: &test-202-status
        name: Transaction was successfully Accepted
        rules:
          status: 'required|in:202'
      200: &test-200-status
        name: Transaction was successfully Accepted
        rules:
          status: 'required|in:200'

  common-headers:
    response: &response-headers
      headers:
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
        content-type: 'application/json'
    transfer: &header-post-transfers
      accept: 'application/vnd.interoperability.transfers+json;version=1.0'
      content-type: 'application/vnd.interoperability.transfers+json;version=1.0'
    put-transfer: &header-put-transfers
      content-type: 'application/vnd.interoperability.transfers+json;version=1.0'
    quotes: &header-post-quotes
      accept: 'application/vnd.interoperability.quotes+json;version=1.0'
      content-type: 'application/vnd.interoperability.quotes+json;version=1.0'
    put-quotes: &header-put-quotes
      content-type: 'application/vnd.interoperability.quotes+json;version=1.0'
    parties: &header-get-parties
      accept: 'application/vnd.interoperability.parties+json;version=1.0'
      content-type: 'application/vnd.interoperability.parties+json;version=1.0'
    put-parties: &header-put-parties
      content-type: 'application/vnd.interoperability.parties+json;version=1.0'
    dfsp1: &header-dfsp1
      date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
      authorization: Bearer {{env.DFSP1_OAUTH_TOKEN}}
      fspiop-source: '{{env.DFSP1_FSPIOP | default("DFSP1")}}'
      fspiop-destination: '{{env.DFSP2_FSPIOP | default("DFSP2")}}'
    dfsp2: &header-dfsp2
      date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
      authorization: Bearer {{env.DFSP2_OAUTH_TOKEN}}
      fspiop-source: '{{env.DFSP2_FSPIOP | default("DFSP2")}}'
      fspiop-destination: '{{env.DFSP1_FSPIOP | default("DFSP1")}}'

  util:
    fwd-headers: &fwded-headers
      fspiop-uri: '{{ steps[current_step-1].request.headers["fspiop-uri"].0 }}'
      fspiop-http-method:
        '{{ steps[current_step-1].request.headers["fspiop-http-method"].0 }}'
      fspiop-destination:
        '{{ steps[current_step-1].request.headers["fspiop-destination"].0 }}'
      content-type:
        '{{ steps[current_step-1].request.headers["content-type"].0 }}'
      accept: '{{ steps[current_step-1].request.headers["accept"].0 }}'
      date: '{{ steps[current_step-1].request.headers["date"].0 }}'
    fwd-message: &fwded-msg
      headers:
        <<: *fwded-headers
        fspiop-source:
          '{{ steps[current_step-1].request.headers["fspiop-source"].0 }}'
        fspiop-signature:
          '{{ steps[current_step-1].request.headers["fspiop-signature"].0 }}'
      body: '{{steps[current_step-1].request.body | json_encode}}'
    response-200: &200-response
      response:
        <<: *response-headers
        status: 200
    response-202: &202-response
      response:
        <<: *response-headers
        status: 202

name: Parties Unresponsive (DFSP1 Sender)
slug: mowali-p2p-parties-unresponsive-dfsp1
use_case: P2P Multicurrency
behavior: negative
description: |
  This is to test what happens when a transaction is initiated by DFSP1 but
  there is no callback PUT parties response from the receiving DFSP2.
precondition: |
  - DFSP1 and DFSP2 are registered in the Hub.
  - The following values are set in the session environment:
    - `DFSP1_FSPIOP`
    - `DFSP2_PARTY_MSISDN`
    - `DFSP1_OAUTH_TOKEN` (if DFSP1 is simulated)
components:
  - name: DFSP 1
    slug: dfsp1
  - name: Mowali Hub
    slug: mowali
  - name: DFSP 2
    slug: dfsp2
test_steps:
  ## 1 ------------------------------GET /parties: MMO1 -> Mojaloop ------------------------------##
  - path: /parties/{Type}/{ID}
    pattern: "parties/MSISDN/[^\/]+$"
    method: GET
    <<: *dfsp1-mowali-meta
    test_request_scripts:
      - <<: *test-auth-header
    test_response_scripts:
      - <<: *test-202-status
    request:
      method: GET
      uri: parties/MSISDN/{{ env.DFSP2_PARTY_MSISDN }}
      headers:
        <<: *header-get-parties
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
        authorization: Bearer {{env.DFSP1_OAUTH_TOKEN}}
        fspiop-source: '{{env.DFSP1_FSPIOP | default("DFSP1")}}'
        fspiop-uri: /parties/MSISDN/{{ env.DFSP2_PARTY_MSISDN }}
        fspiop-http-method: GET
    <<: *202-response

  ## 2 ------------------------------GET /parties: Mojaloop -> MMO2 ------------------------------##
  - path: /parties/{Type}/{ID}
    pattern: "parties/MSISDN/[^\/]+$"
    method: GET
    <<: *mowali-dfsp2-meta
    test_response_scripts:
      - <<: *test-202-status
    request:
      method: GET
      uri: parties/MSISDN/{{ env.DFSP2_PARTY_MSISDN }}
      <<: *fwded-msg
    <<: *202-response

  ## 3 ------------------------------PUT/Parties: Mojaloop <- MMO2 ------------------------------##
  #  Simulate a nonresponsive DFSP2 by not listening for its response

  ## 4 ------------------------------PUT/Parties: MMO1 <- Mojaloop ------------------------------##
  - path: /parties/{Type}/{ID}/error
    pattern: "^parties/MSISDN/[^\/]+(/error)?$"
    method: PUT
    <<: *mowali-dfsp1-meta
    test_request_scripts:
      - name: Error must be provided in the callback payload
        rules:
          body.errorInformation.errorCode: 'required|in:3201'
          body.errorInformation.errorDescription: 'required'
    test_response_scripts:
      - <<: *test-200-status
    request:
      method: PUT
      uri: parties/MSISDN/{{ env.DFSP2_PARTY_MSISDN }}/error
      headers:
        <<: *header-put-parties
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
        fspiop-source: Switch
        fspiop-destination: '{{env.DFSP1_FSPIOP | default("DFSP1")}}'
      body:
        errorInformation:
          errorCode: '3201'
          errorDescription: 'Destination FSP does not exist or cannot be found'
    <<: *200-response
