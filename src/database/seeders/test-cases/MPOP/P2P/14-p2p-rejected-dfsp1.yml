name: Transfer Rejected by Receiver (DFSP1 Sender)
slug: mowali-p2p-rejected-dfsp1
use_case: P2P
behavior: negative
description: |
  This testcase simulates a scenario where a party at DFSP1 would like to
  send money to a party at DFSP2. This flow shows the steps involved when
  the party at DFSP1 **initiates** the transaction, and the party at DFSP2
  **rejects** the transaction.
precondition: |
  - DFSP1 and DFSP2 exist Mowali Hub as Participants.
  - The following values are set in the session environment:
    - `DFSP1_FSPIOP`
    - `DFSP1_PARTY_MSISDN`
    - `DFSP2_FSPIOP` 
    - `DFSP2_PARTY_MSISDN` 
    - `DFSP1_OAUTH_TOKEN` (if DFSP1 is simulated)
    - `DFSP2_OAUTH_TOKEN` (if DFSP2 is simulated)
components:
  - name: DFSP 1
    slug: dfsp1
  - name: Mowali Hub
    slug: mowali
  - name: DFSP 2
    slug: dfsp2
test_steps:
  ## 1 ------------------------------GET /parties: MMO1 -> Mojaloop ------------------------------##
  - path: /parties/{Type}/{ID}
    pattern: "parties/MSISDN/[^\/]+$"
    method: GET
    source: dfsp1
    target: mowali
    mtls: true
    api_spec: Mojaloop v1.0
    test_request_scripts:
      - name: Authorization header must be provided
        rules:
          headers.authorization: 'required'
    test_response_scripts:
      - name: Transaction was successfully Accepted
        rules:
          status: 'required|in:202'
    request:
      method: GET
      uri: parties/MSISDN/{{ env.DFSP2_PARTY_MSISDN }}
      headers:
        fspiop-uri: /parties/MSISDN/{{ env.DFSP2_PARTY_MSISDN }}
        fspiop-http-method: GET
        accept: 'application/vnd.interoperability.parties+json;version=1.0'
        content-type: 'application/vnd.interoperability.parties+json;version=1.0'
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
        authorization: Bearer {{env.DFSP1_OAUTH_TOKEN}}
        fspiop-source: '{{env.DFSP1_FSPIOP | default("DFSP1")}}'
    response:
      status: 202
      headers:
        content-type: 'application/json'
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'

  ## 2 ------------------------------GET /parties: Mojaloop -> MMO2 ------------------------------##
  - path: /parties/{Type}/{ID}
    pattern: "parties/MSISDN/[^\/]+$"
    method: GET
    source: mowali
    target: dfsp2
    mtls: true
    api_spec: Mojaloop v1.0
    test_response_scripts:
      - name: Transaction was successfully Accepted
        rules:
          status: 'required|in:202'
    request:
      method: GET
      uri: parties/MSISDN/{{ env.DFSP2_PARTY_MSISDN }}
      headers:
        fspiop-uri: /parties/MSISDN/{{ env.DFSP2_PARTY_MSISDN }}
        fspiop-http-method: GET
        accept: 'application/vnd.interoperability.parties+json;version=1.0'
        content-type: 'application/vnd.interoperability.parties+json;version=1.0'
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
        fspiop-source: '{{env.DFSP1_FSPIOP | default("DFSP1")}}'
    response:
      status: 202
      headers:
        content-type: 'application/json'
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'

  ## 3 ------------------------------PUT/Parties: Mojaloop <- MMO2 ------------------------------##
  - path: /parties/{Type}/{ID}
    pattern: "^parties/MSISDN/[^\/]+(/error)?$"
    method: PUT
    source: dfsp2
    target: mowali
    mtls: true
    api_spec: Mojaloop v1.0
    test_request_scripts:
      - name: Authorization header must be provided
        rules:
          headers.authorization: 'required'
      - name: Correct party must be returned
        rules:
          body.party.partyIdInfo.partyIdentifier:
            'required|in:{{ env.DFSP2_PARTY_MSISDN }}'
    test_response_scripts:
      - name: Party information was successfully received
        rules:
          status: 'required|in:200'
    request:
      method: PUT
      uri: parties/MSISDN/{{ env.DFSP2_PARTY_MSISDN }}
      headers:
        fspiop-uri: /parties/MSISDN/{{ env.DFSP2_PARTY_MSISDN }}
        fspiop-http-method: PUT
        content-type: 'application/vnd.interoperability.parties+json;version=1.0'
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
        fspiop-source: '{{env.DFSP2_FSPIOP | default("DFSP2") }}'
        authorization: Bearer {{env.DFSP2_OAUTH_TOKEN}}
        fspiop-destination: '{{env.DFSP1_FSPIOP | default("DFSP1")}}'
      body:
        party:
          name: 'TestFirst TestLast'
          partyIdInfo:
            fspId: '{{env.DFSP2_FSPIOP | default("DFSP2")}}'
            partyIdType: 'MSISDN'
            partyIdentifier: '{{ env.DFSP2_PARTY_MSISDN }}'
          personalInfo:
            complexName:
              lastName: 'TestLast'
              firstName: 'TestFirst'
              middleName: 'TestMiddle'
            dateOfBirth: '2010-10-10'
    response:
      headers:
        content-type: 'application/json'
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
      status: 200

  ## 4 ------------------------------PUT/Parties: MMO1 <- Mojaloop ------------------------------##
  - path: /parties/{Type}/{ID}
    pattern: "^parties/MSISDN/[^\/]+(/error)?$"
    method: PUT
    source: mowali
    target: dfsp1
    mtls: true
    api_spec: Mojaloop v1.0
    test_request_scripts:
      - name: Correct party must be returned
        rules:
          body.party.partyIdInfo.partyIdentifier:
            'required|in:{{ env.DFSP2_PARTY_MSISDN }}'
    test_response_scripts:
      - name: Party information was successfully received
        rules:
          status: 'required|in:200'
    request:
      method: PUT
      uri: parties/MSISDN/{{ env.DFSP2_PARTY_MSISDN }}
      headers:
        fspiop-uri: '{{ steps.3.request.headers["fspiop-uri"].0 }}'
        fspiop-http-method:
          '{{ steps.3.request.headers["fspiop-http-method"].0 }}'
        fspiop-source: '{{ steps.3.request.headers["fspiop-source"].0 }}'
        fspiop-destination:
          '{{ steps.3.request.headers["fspiop-destination"].0 }}'
        content-type: '{{ steps.3.request.headers["content-type"].0 }}'
        accept: '{{ steps.3.request.headers["accept"].0 }}'
        date: '{{ steps.3.request.headers["date"].0 }}'
      body: '{{steps.3.request.body | json_encode}}'
    response:
      headers:
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
        content-type: 'application/json'
      status: 200

  ## 5 POST/Quotes: MMO1 -> Mojaloop ##
  - path: /quotes
    pattern: 'quotes$'
    method: POST
    source: dfsp1
    target: mowali
    mtls: true
    api_spec: Mojaloop v1.0
    test_request_scripts:
      - name: Mandatory IDs are present
        rules:
          body.quoteId: 'required|regex:/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/'
          body.transactionId: 'required|regex:/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/'
      - name: Authorization header must be provided
        rules:
          headers.authorization: 'required'
      - name: Transaction Type is a P2P Transfer
        rules:
          body.transactionType.scenario: 'required|in:TRANSFER'
          body.transactionType.initiator: 'required|in:PAYER'
          body.transactionType.initiatorType: 'required|in:CONSUMER'
      - name: Initiator wants to send money to Remote party
        rules:
          body.amountType: 'required|in:SEND'
      - name: Payer and Payee parties are present and valid in the network
        rules:
          body.payer.partyIdInfo.partyIdType: 'required|in:MSISDN'
          body.payee.partyIdInfo.partyIdType: 'required|in:MSISDN'
          body.payer.partyIdInfo.partyIdentifier:
            'required|in:{{env.DFSP1_PARTY_MSISDN | default("442079469999")}}'
          body.payee.partyIdInfo.partyIdentifier:
            'required|in:{{ env.DFSP2_PARTY_MSISDN }}'
      - name: Amount and currency are specified correctly
        rules:
          body.amount.amount:
            'required{{env.DFSP1_TRANSFER_AMOUNT ?
            "|in:#{env.DFSP1_TRANSFER_AMOUNT}" : ""}}'
          body.amount.currency: 'required|regex:/^[A-Z]{3}/'
    test_response_scripts:
      - name: Quote was successfully Accepted
        rules:
          status: 'required|in:202'
    request:
      jws:
        alg: RS256
        key: '{{ file_env.DFSP1_JWS_PRIVATE_KEY }}'
        public_key: '{{ file_env.DFSP1_JWS_PUBLIC_KEY }}'
        header: 'fspiop-signature'
        transform: mojaloop
        protectedHeaders:
          - FSPIOP-URI
          - FSPIOP-HTTP-Method
          - FSPIOP-Source
          - FSPIOP-Destination
          - Date
      method: POST
      uri: quotes
      headers:
        fspiop-uri: /quotes
        fspiop-http-method: POST
        accept: 'application/vnd.interoperability.quotes+json;version=1.0'
        content-type: 'application/vnd.interoperability.quotes+json;version=1.0'
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
        authorization: Bearer {{env.DFSP1_OAUTH_TOKEN}}
        fspiop-source: '{{env.DFSP1_FSPIOP | default("DFSP1")}}'
        fspiop-destination: '{{env.DFSP2_FSPIOP | default("DFSP2")}}'
      body:
        quoteId: '{{uuidv4()}}'
        transactionId: '{{uuidv4()}}'
        payee: '{{steps.4.request.body.party | json_encode}}'
        payer:
          partyIdInfo:
            partyIdType: 'MSISDN'
            partyIdentifier:
              '{{env.DFSP1_PARTY_MSISDN | default("442079469999")}}'
            fspId: '{{env.DFSP1_FSPIOP | default("DFSP1")}}'
          name: 'John Doe'
          personalInfo:
            complexName:
              firstName: 'John'
              middleName: 'Jane'
              lastName: 'Doe'
            dateOfBirth: '2000-01-01'
        amountType: 'SEND'
        amount:
          currency: '{{ env.DFSP1_TRANSFER_CURRENCY | default("GHS") }}'
          amount: '{{ env.DFSP1_TRANSFER_AMOUNT | default("100") }}'
        transactionType:
          scenario: 'TRANSFER'
          initiator: 'PAYER'
          initiatorType: 'CONSUMER'
    response:
      headers:
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
        content-type: 'application/json'
      status: 202

  ## 6 POST/Quotes: Mojaloop -> MMO2 ##
  - path: /quotes
    pattern: 'quotes$'
    method: POST
    source: mowali
    target: dfsp2
    mtls: true
    api_spec: Mojaloop v1.0
    test_request_scripts:
      - name: Mandatory IDs is correctly forwarded
        rules:
          body.quoteId: 'required|in:{{steps.5.request.body.quoteId}}'
          body.transactionId: 'required|in:{{steps.5.request.body.transactionId}}'
      - name: Transaction Type is a P2P Transfer
        rules:
          body.transactionType.scenario: 'required|in:TRANSFER'
          body.transactionType.initiator: 'required|in:PAYER'
          body.transactionType.initiatorType: 'required|in:CONSUMER'
      - name: Payer wants to send money to Payee
        rules:
          body.amountType: 'required|in:SEND'
      - name: Payer and Payee parties are present and valid in the network
        rules:
          body.payer.partyIdInfo.partyIdType: 'required|in:MSISDN'
          body.payee.partyIdInfo.partyIdType: 'required|in:MSISDN'
          body.payer.partyIdInfo.partyIdentifier:
            'required|in:{{env.DFSP1_PARTY_MSISDN | default("442079469999")}}'
          body.payee.partyIdInfo.partyIdentifier:
            'required|in:{{ env.DFSP2_PARTY_MSISDN }}'
      - name: Amount and currency are specified correctly
        rules:
          body.amount.amount:
            'required{{env.DFSP1_TRANSFER_AMOUNT ?
            "|in:#{env.DFSP1_TRANSFER_AMOUNT}" : ""}}'
          body.amount.currency: 'required|regex:/^[A-Z]{3}/'
    test_response_scripts:
      - name: Transaction was successfully Accepted
        rules:
          status: 'required|in:202'
    request:
      method: POST
      uri: quotes
      headers:
        fspiop-uri: '{{ steps.5.request.headers["fspiop-uri"].0 }}'
        fspiop-http-method:
          '{{ steps.5.request.headers["fspiop-http-method"].0 }}'
        fspiop-source: '{{ steps.5.request.headers["fspiop-source"].0 }}'
        fspiop-destination:
          '{{ steps.5.request.headers["fspiop-destination"].0 }}'
        content-type: '{{ steps.5.request.headers["content-type"].0 }}'
        accept: '{{ steps.5.request.headers["accept"].0 }}'
        date: '{{ steps.5.request.headers["date"].0 }}'
      body: '{{steps.5.request.body | json_encode}}'
    response:
      headers:
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
        content-type: 'application/json'
      status: 202

  ## 7 PUT/Quotes/{ID}:  Mojaloop <- MMO2 ##
  - path: /quotes/{ID}
    pattern: 'quotes/[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}(/error)?$'
    method: PUT
    source: dfsp2
    target: mowali
    mtls: true
    api_spec: Mojaloop v1.0
    test_request_scripts:
      - name: Amounts and currencies are specified correctly
        rules:
          body.transferAmount.amount: 'required|in:{{steps.5.request.body.amount.amount}}'
          body.transferAmount.currency: 'required|regex:/^[A-Z]{3}/'
      - name: Quote ID is correctly used
        rules:
          uri: 'required|regex:/quotes\/{{steps.6.request.body.quoteId}}/'
      - name: ILP is correctly generated
        rules:
          body.expiration:
            - 'required'
            - 'regex:/^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$/'
          body.ilpPacket:
            - 'required'
            - 'regex:/^[A-Za-z0-9-_]+[=]{0,2}$/'
            # TODO: enable ilp validation once it is fixed - 'ilpPacketAmount:{{steps.6.request.body.amount.amount}}'
            # TODO: enable ilp validation once it is fixed - 'ilpPacketExpiration'
            # TODO: enable ilp validation once it is fixed - 'ilpPacketCondition'
    test_response_scripts:
      - name: Transaction was successfully Accepted
        rules:
          status: 'required|in:200'
    request:
      jws:
        alg: RS256
        key: '{{ file_env.DFSP2_JWS_PRIVATE_KEY }}'
        public_key: '{{ file_env.DFSP2_JWS_PUBLIC_KEY }}'
        header: 'fspiop-signature'
        transform: mojaloop
        protectedHeaders:
          - FSPIOP-URI
          - FSPIOP-HTTP-Method
          - FSPIOP-Source
          - FSPIOP-Destination
          - Date
      method: PUT
      uri: quotes/{{steps.6.request.body.quoteId}}
      headers:
        fspiop-uri: /quotes/{{steps.6.request.body.quoteId}}
        fspiop-http-method: PUT
        content-type: 'application/vnd.interoperability.quotes+json;version=1.0'
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
        authorization: Bearer {{env.DFSP2_OAUTH_TOKEN}}
        fspiop-source: '{{env.DFSP2_FSPIOP | default("DFSP2")}}'
        fspiop-destination: '{{env.DFSP1_FSPIOP | default("DFSP1")}}'
      body: |
        {% set expiry = date("+1 hour") %}
        {% set fulfilment = ilpFulfilment() %}
        {% set condition = ilpCondition(fulfilment) %}
        {{
          {
            transferAmount: {
              currency: steps.6.request.body.amount.currency,
              amount: steps.6.request.body.amount.amount
            },
            expiration: expiry | date("Y-m-d\\TH:i:s.vP"),
            condition: condition | base64url_encode,
            ilpPacket:  ilpPacket(
              steps.6.request.body.amount.amount,
              expiry | date("Y-m-d\\TH:i:s.vP"),
              condition,
              "g.gh.msisdn.#{steps.6.request.body.payee.partyIdInfo.partyIdentifier}",
              ""
            ) | base64url_encode
          } | json_encode
        }}
    response:
      headers:
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
        content-type: 'application/json'
      status: 200

  ## 8 PUT/Quotes/{ID}: MMO1 <- Mojaloop ##
  - path: /quotes/{ID}
    pattern: 'quotes/[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
    method: PUT
    source: mowali
    target: dfsp1
    mtls: true
    api_spec: Mojaloop v1.0
    test_request_scripts:
      - name: Amounts and currencies are specified correctly
        rules:
          body.transferAmount.amount: 'required|in:{{steps.5.request.body.amount.amount}}'
          body.transferAmount.currency: 'required|regex:/^[A-Z]{3}/'
      - name: Quote ID is correctly used
        rules:
          uri: 'required|regex:/quotes\/{{steps.6.request.body.quoteId}}/'
      - name: ILP is correctly forwarded
        rules:
          body.expiration:
            - 'required'
            - 'regex:/^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$/'
          body.ilpPacket:
            - 'required'
            - 'regex:/^[A-Za-z0-9-_]+[=]{0,2}$/'
            # TODO: enable ilp validation once it is fixed - 'ilpPacketAmount:{{steps.6.request.body.amount.amount}}'
            # TODO: enable ilp validation once it is fixed - 'ilpPacketExpiration'
            # TODO: enable ilp validation once it is fixed - 'ilpPacketCondition'
          body.condition: 'required|in:{{steps.7.request.body.condition}}'
    test_response_scripts:
      - name: Transaction was successfully Accepted
        rules:
          status: 'required|in:200'
    request:
      method: PUT
      uri: quotes/{{steps.6.request.body.quoteId}}
      headers:
        fspiop-uri: '{{ steps.7.request.headers["fspiop-uri"].0 }}'
        fspiop-http-method:
          '{{ steps.7.request.headers["fspiop-http-method"].0 }}'
        fspiop-source: '{{ steps.7.request.headers["fspiop-source"].0 }}'
        fspiop-destination:
          '{{ steps.7.request.headers["fspiop-destination"].0 }}'
        content-type: '{{ steps.7.request.headers["content-type"].0 }}'
        accept: '{{ steps.7.request.headers["accept"].0 }}'
        date: '{{ steps.7.request.headers["date"].0 }}'
      body: '{{steps.7.request.body | json_encode}}'
    response:
      headers:
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
        content-type: 'application/json'
      status: 200

  ## 9. POST/Transfers: MMO1 -> Mojaloop ##
  - path: /transfers
    pattern: 'transfers$'
    method: POST
    source: dfsp1
    target: mowali
    mtls: true
    api_spec: Mojaloop v1.0
    test_request_scripts:
      - name: Transfer ID is generated
        rules:
          body.transferId: 'required|regex:/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/'
      - name: Amounts and currencies are specified correctly
        rules:
          body.amount.amount: 'required|in:{{steps.8.request.body.transferAmount.amount}}'
          body.amount.currency: 'required|in:{{steps.8.request.body.transferAmount.currency}}'
      - name: ILP is provided correctly
        rules:
          body.expiration:
            - 'required'
            - 'regex:/^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$/'
          body.ilpPacket:
            - 'required'
            - 'regex:/^[A-Za-z0-9-_]+[=]{0,2}$/'
            # TODO: enable ilp validation once it is fixed - 'ilpPacketAmount:{{steps.8.request.body.transferAmount.amount}}'
            # TODO: enable ilp validation once it is fixed - 'ilpPacketExpiration'
            # TODO: enable ilp validation once it is fixed - 'ilpPacketCondition'
      - name: FSPs are specified correctly
        rules:
          body.payeeFsp: 'required|in:{{env.DFSP2_FSPIOP | default("DFSP2")}}'
          body.payerFsp: 'required|in:{{env.DFSP1_FSPIOP | default("DFSP1")}}'

    test_response_scripts:
      - name: Transaction was successfully Accepted
        rules:
          status: 'required|in:202'
    request:
      jws:
        alg: RS256
        key: '{{ file_env.DFSP1_JWS_PRIVATE_KEY }}'
        public_key: '{{ file_env.DFSP1_JWS_PUBLIC_KEY }}'
        header: 'fspiop-signature'
        transform: mojaloop
        protectedHeaders:
          - FSPIOP-URI
          - FSPIOP-HTTP-Method
          - FSPIOP-Source
          - FSPIOP-Destination
          - Date
      method: POST
      uri: transfers
      headers:
        fspiop-uri: /transfers
        fspiop-http-method: POST
        accept: 'application/vnd.interoperability.transfers+json;version=1.0'
        content-type: 'application/vnd.interoperability.transfers+json;version=1.0'
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
        authorization: Bearer {{env.DFSP1_OAUTH_TOKEN}}
        fspiop-source: '{{env.DFSP1_FSPIOP | default("DFSP1")}}'
        fspiop-destination: '{{env.DFSP2_FSPIOP | default("DFSP2")}}'
      body:
        # Generate UUID
        transferId: '{{steps.5.request.body.transactionId}}'
        payerFsp: '{{steps.5.request.body.payer.partyIdInfo.fspId}}'
        payeeFsp: '{{steps.5.request.body.payee.partyIdInfo.fspId}}'
        amount: '{{steps.8.request.body.transferAmount | json_encode}}'
        expiration: '{{steps.8.request.body.expiration}}'
        ilpPacket: '{{steps.8.request.body.ilpPacket}}'
        condition: '{{steps.8.request.body.condition}}'
    response:
      headers:
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
        content-type: 'application/json'
      status: 202

  ## 10. POST/Transfers: Mojaloop -> MMO2 ##
  - path: /transfers
    pattern: 'transfers$'
    method: POST
    source: mowali
    target: dfsp2
    mtls: true
    api_spec: Mojaloop v1.0
    test_request_scripts:
      - name: Transfer ID is correctly used
        rules:
          body.transferId: 'required|in:{{steps.9.request.body.transferId}}'
      - name: Amounts and currencies are specified correctly
        rules:
          body.amount.amount: 'required|in:{{steps.9.request.body.amount.amount}}'
          body.amount.currency: 'required|in:{{steps.9.request.body.amount.currency}}'
      - name: ILP is provided correctly
        rules:
          body.expiration:
            - 'required'
            - 'regex:/^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$/'
          body.ilpPacket:
            - 'required'
            - 'regex:/^[A-Za-z0-9-_]+[=]{0,2}$/'
            # TODO: enable ilp validation once it is fixed - 'ilpPacketAmount:{{steps.8.request.body.transferAmount.amount}}'
            # TODO: enable ilp validation once it is fixed - 'ilpPacketExpiration'
            # TODO: enable ilp validation once it is fixed - 'ilpPacketCondition'
      - name: FSPs are specified correctly
        rules:
          body.payeeFsp: 'required|in:{{env.DFSP2_FSPIOP | default("DFSP2")}}'
          body.payerFsp: 'required|in:{{env.DFSP1_FSPIOP | default("DFSP1")}}'
    test_response_scripts:
      - name: Transaction was successfully Accepted
        rules:
          status: 'required|in:202'
    request:
      method: POST
      uri: transfers
      headers:
        fspiop-uri: '{{ steps.9.request.headers["fspiop-uri"].0 }}'
        fspiop-http-method:
          '{{ steps.9.request.headers["fspiop-http-method"].0 }}'
        fspiop-source: '{{ steps.9.request.headers["fspiop-source"].0 }}'
        fspiop-destination:
          '{{ steps.9.request.headers["fspiop-destination"].0 }}'
        content-type: '{{ steps.9.request.headers["content-type"].0 }}'
        accept: '{{ steps.9.request.headers["accept"].0 }}'
        date: '{{ steps.9.request.headers["date"].0 }}'
      body: '{{steps.9.request.body | json_encode}}'
    response:
      headers:
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
        content-type: 'application/json'
      status: 202

  ## 11. POST/Transfers/error: MMO2 -> Mojaloop
  - path: /transfers/{ID}/error
    pattern: 'transfers/[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}/error$'
    method: PUT
    source: dfsp2
    target: mowali
    mtls: true
    api_spec: Mojaloop v1.0
    test_request_scripts:
      - name: Transfer ID is correct
        rules:
          uri: 'required|regex:/transfers\/{{steps.10.request.body.transferId}}\/error/'
      - &test-error-code
        name: Error code is set
        rules:
          body.errorInformation.errorCode: 'required'
          body.errorInformation.errorDescription: 'required'
    test_response_scripts:
      - name: Callback was successfully accepted
        rules:
          status: 'required|in:200'
    request:
      jws:
        alg: RS256
        key: '{{ file_env.DFSP2_JWS_PRIVATE_KEY }}'
        public_key: '{{ file_env.DFSP2_JWS_PUBLIC_KEY }}'
        header: 'fspiop-signature'
        transform: mojaloop
        protectedHeaders:
          - FSPIOP-URI
          - FSPIOP-HTTP-Method
          - FSPIOP-Source
          - FSPIOP-Destination
          - Date
      method: PUT
      uri: 'transfers/{{ steps.10.request.body.transferId }}/error'
      headers:
        fspiop-uri: '/transfers/{{ steps.10.request.body.transferId }}/error'
        fspiop-http-method: PUT
        content-type: 'application/vnd.interoperability.transfers+json;version=1.0'
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
        authorization: Bearer {{env.DFSP2_OAUTH_TOKEN}}
        fspiop-source: '{{env.DFSP2_FSPIOP | default("DFSP2")}}'
        fspiop-destination: '{{env.DFSP1_FSPIOP | default("DFSP1")}}'
      body:
        errorInformation:
          errorCode: '5105'
          errorDescription: 'Payee FSP rejected the financial transaction.'
    response:
      headers:
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
        content-type: 'application/json'
      status: 200

  ## 12. PUT/Transfers/{ID}/error: MMO1 <- Mojaloop ##
  - path: /transfers/{ID}/error
    pattern: 'transfers/[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}/error$'
    method: PUT
    source: mowali
    target: dfsp1
    mtls: true
    api_spec: Mojaloop v1.0
    test_request_scripts:
      - name: Transfer ID is correct
        rules:
          uri: 'required|regex:/transfers\/{{steps.10.request.body.transferId}}\/error/'
      - <<: *test-error-code
    test_response_scripts:
      - name: Callback was successfully Accepted
        rules:
          status: 'required|in:200'
    request:
      method: PUT
      uri: 'transfers/{{steps.9.request.body.transferId}}/error'
      headers:
        fspiop-uri: '{{ steps.11.request.headers["fspiop-uri"].0 }}'
        fspiop-http-method:
          '{{ steps.11.request.headers["fspiop-http-method"].0 }}'
        fspiop-source: '{{ steps.11.request.headers["fspiop-source"].0 }}'
        fspiop-destination:
          '{{ steps.11.request.headers["fspiop-destination"].0 }}'
        content-type: '{{ steps.11.request.headers["content-type"].0 }}'
        accept: '{{ steps.11.request.headers["accept"].0 }}'
        date: '{{ steps.11.request.headers["date"].0 }}'
      body: '{{steps.11.request.body | json_encode}}'
    response:
      headers:
        date: '{{"now" | date("D, d M Y H:i:s T", "GMT")}}'
        content-type: 'application/json'
      status: 200
