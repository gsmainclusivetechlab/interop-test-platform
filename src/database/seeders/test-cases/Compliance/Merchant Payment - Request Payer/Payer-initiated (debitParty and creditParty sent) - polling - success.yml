sp-mmap: &sp-mmap
  source: sp
  target: mmap
  api_spec: MM v1.1.3

name: Payer-initiated (debitParty and creditParty sent) - polling - success
slug: payer-initiated-debitParty-creditParty-sent-polling-success
use_case: Payer/Customer-Initiated Merchant Payment
behavior: positive
description: |
  Customer Client requests a Payer-initiated merchant payment through the Mobile Money API sending their own and the merchantâ€™s details and the Mobile Money Provider handles the request and responds with a request state. The Customer Client polls the Mobile Money Provider until the request is authorised or declined or the polling limit has been reached. The Customer Client requests the specific transaction using the transaction reference returned in the request state and the transaction object is sent back to the Customer Client.
precondition: |
  - Mobile Money Operator has GSMA Mobile Money API Implemented.
  - Mobile Money Operator is capable of handled async calls.
  - Required Parameters for Execution:
    - Amount should be the value `18.00`.  
  - Define the environment variables to customise this test case:
    - `X_CLIENT_ID`, default value is `CUSTOMER12345`
    - `CURRENCY`, default value is "USD`
    - `DEBIT_PARTY_KEY`, default value is `msisdn`
    - `DEBIT_PARTY_VALUE`, default value is `+33555123456`
    - `CREDIT_PARTY_KEY`, default value is `msisdn`
    - `CREDIT_PARTY_VALUE`, default value is `+33555789123`
components:
  - name: Service Provider
    slug: sp
  - name: Mobile Money API Provider
    slug: mmap
test_steps:
  ## 1 ------------------------------POST /transaction: SP -> MMAP ------------------------------##
  - path: /transactions/type/{transactionType}
    pattern: '^transactions/type/merchantpay$'
    method: POST
    <<: *sp-mmap
    trigger:
      amount: '18.00'
    test_request_scripts:
      - name: Header has the X-Client-Id
        rules:
          headers.X-Client-Id: 'required'
      - name: Amount is specified correctly
        rules:
          body.amount: 'regex:/^18([.][0-9]{0,4})?$/'
    test_response_scripts:
      - name: Transaction was successfully Accepted
        rules:
          status: 'required|in:202'
      - name: Status is specified correctly
        rules:
          body.status: 'required|in:pending'
      - name: Notification Method is specified correctly
        rules:
          body.notificationMethod: 'required|in:polling'
    request:
      delay: 3
      method: POST
      uri: /transactions/type/merchantpay
      headers:
        Accept: 'application/json'
        Content-Type: 'application/json'
        X-Date: '{{ new_date_iso8601() }}'
        X-Client-Id: '{{ env.X_CLIENT_ID|default("CUSTOMER12345")}}'
        X-CorrelationID: '{{ uuidv4() }}'
      body:
        amount: '18'
        currency: '{{ env.CURRENCY|default("USD")}}'
        debitParty:
          - key: '{{ env.DEBIT_PARTY_KEY|default("msisdn")}}'
            value: '{{ env.DEBIT_PARTY_VALUE|default("+33555123456")}}'
        creditParty:
          - key: '{{ env.CREDIT_PARTY_KEY|default("msisdn")}}'
            value: '{{ env.CREDIT_PARTY_VALUE|default("+33555789123")}}'
    response:
      status: 202
      headers:
        Content-Type: 'application/json'
        X-Date: '{{ new_date_iso8601() }}'
      body:
        serverCorrelationId: '{{ uuidv4() }}'
        status: 'pending'
        notificationMethod: 'polling'

  ## 2 ------------------------------GET /RequestStates: SP -> MMAP ------------------------------##
  - path: /requeststates/{serverCorrelationId}
    pattern: '^requeststates/^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$'
    method: GET
    <<: *sp-mmap
    trigger:
      serverCorrelationId: '{{ steps.1.response.body.serverCorrelationId }}'
    test_response_scripts:
      - name: Transaction was successfully accepted
        rules:
          status: 'required|in:200'
      - name: Transaction was approved
        rules:
          body.status: 'required|in:completed'
    request:
      method: 'GET'
      uri: '/requeststates/{{ steps.1.response.body.serverCorrelationId }}'
      headers:
        content-type: 'application/json'
        x-date: '{{ new_date_iso8601() }}'
    response:
      status: 200
      headers:
        content-type: 'application/json'
        x-date: '{{ new_date_iso8601() }}'
      body:
        serverCorrelationId: '{{ steps.1.response.body.serverCorrelationId }}'
        status: 'completed'
        objectReference: '{{ uuidv4() }}'
        notificationMethod: 'polling'
    repeat:
      condition:
        body:
          status: 'pending'
      max: 4
      count: 2
      response:
        status: 200
        body:
          serverCorrelationId: '{{ steps.1.response.body.serverCorrelationId }}'
          status: 'pending'
          notificationMethod: 'polling'
      test_response_scripts:
        - name: Request was received and it is pending
          rules:
            body.status: 'required|in:pending'
            status: 'required|in:200'
  ## 3 ------------------------------GET /transaction: SP -> MMAP ------------------------------##
  - path: /transactions/{transactionReference}
    pattern: '^transactions/^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$'
    method: GET
    <<: *sp-mmap
    trigger:
      amount: '18.00'
    test_response_scripts:
      - name: Transaction was successfully accepted
        rules:
          status: 'required|in:200'
      - name: Amount is specified correctly
        rules:
          body.amount: 'regex:/^18([.][0-9]{0,4})?$/'
      - name: Transaction is a Merchant Payment
        rules:
          body.type: 'required|in:merchantpay'
      - name: Transaction was approved
        rules:
          body.transactionStatus: 'required|in:completed'
    request:
      method: 'GET'
      uri: 'transactions/{{ steps.2.response.body.objectReference }}'
      headers:
        Content-Type: 'application/json'
        X-Date: '{{ new_date_iso8601() }}'
    response:
      status: 200
      headers:
        Content-Type: 'application/json'
        X-Date: '{{ new_date_iso8601() }}'
      body:
        '{{ steps.1.request.body|merge({type: "merchantpay", transactionStatus:
        "completed", transactionReference:
        steps.2.response.body.objectReference})|json_encode }}'
