name: Payee/Merchant-Initiated Merchant Payment with Auth Code - debitParty - callback - failure (business rule error)
slug: payee-initiated-merchant-payment-with-auth-code-debitparty-callback-failure-business-rule-error
use_case: Merchant Payment
behavior: negative
description: |
  Customer client tries to set up a pre-authorised code for merchant payments using the through the Mobile Money API and the Mobile Money Provider handles the request and responds with an asynchronous callback. The authorisation code request fails and an error object is sent back to the customer client indicating a failure create a code due to insufficient funds.
precondition: |
  - Mobile Money Operator has GSMA Mobile Money API Implemented.
  - Mobile Money Operator is capable of handled async calls.
  - Required Parameters for Execution:
    - Amount should be the value `9.00`.
  - Define the envrionment variables to customise this test case:
    - `X_CLIENT_ID_CUSTOMER`, default value is `CUSTOMER12345`
    - `CURRENCY`, default value is `USD`
    - `DEBIT_PARTY_KEY`, default value is `msisdn`
    - `DEBIT_PARTY_VALUE`, default value is `+33555123456`
components:
  - name: 'Mobile Money API Provider'
    slug: mmap
  - name: 'Service Provider'
    slug: sp
test_steps:
  ## 1 ------------------------------POST/Accounts: SP -> MMO1------------------------------##
  - path: /accounts/{identifierType}/{identifier}/authorisationcodes
    method: POST
    pattern: '^accounts/([a-zA-Z]*)/([a-zA-Z0-9]*)/authorisationcodes$'
    source: sp
    target: mmap
    api_spec: MM v1.2.0
    trigger:
      amount: '9.00'
    test_request_scripts:
      - name: URI has a valid identifierType
        rules:
          path:
            - 'required'
            - 'regex:/.*\/accounts\/(accountid|msisdn|walletid|linkref|consumerno|serviceprovider|storeid|accountcategory|bankaccountno|accountrank|identityalias|iban|swiftbic|sortcode|organisationid|bankname|bankaccounttitle|username|emailaddress|mandatereference)\/.*\/authorisationcodes$/'
      - name: Header has the Url Callback
        rules:
          headers.X-Callback-URL.*: 'required|url'
      - name: Header has the X-Client-Id
        rules:
          headers.X-Client-Id: 'required'
      - name: Amount is correct
        rules:
          body.amount: 'regex:/^9([.][0-9]{0,4})?$/'
    test_response_scripts:
      - name: Status is specified correctly
        rules:
          body.status: 'required|in:pending'
      - name: Notification Method is specified correctly
        rules:
          body.notificationMethod: 'required|in:callback'
    request:
      method: 'POST'
      uri:
        /accounts/{{ env.DEBIT_PARTY_KEY|default("msisdn")}}/{{
        env.DEBIT_PARTY_VALUE|default("+33555123456")}}/authorisationcodes
      headers:
        Content-Type: 'application/json'
        X-Date: '{{ new_date_iso8601() }}'
        X-Client-Id: '{{ env.X_CLIENT_ID_CUSTOMER|default("CUSTOMER12345")}}'
        X-Callback-URL: '{{ mapped_urls["mmap"]["sp"] }}/callback'
        X-CorrelationID: '{{ uuidv4() }}'
      body:
        requestDate: '{{ new_date_iso8601_zulu() }}'
        redemptionTransactionTypes:
          - transactionType: merchantpay
        amount: '9'
        currency: '{{ env.CURRENCY|default("USD")}}'
    response:
      status: 202
      headers:
        Content-Type: 'application/json'
        X-Date: '{{ new_date_iso8601() }}'
      body:
        serverCorrelationId: '{{ uuidv4() }}'
        status: 'pending'
        notificationMethod: 'callback'

  ## 2 ------------------------------PUT /Callback: MMO1 -> SP ------------------------------##
  - path: '{X-Callback-URL}'
    pattern: '.*'
    method: PUT
    source: mmap
    target: sp
    api_spec: MM v1.2.0
    callback:
      origin_method: POST
      origin_path: /accounts/{identifierType}/{identifier}/authorisationcodes
      name: authorisationCodesFailureEvent
    test_request_scripts:
      - name: Error category is valid
        rules:
          body.errorCategory: 'required|in:businessRule'
      - name: Error code is valid
        rules:
          body.errorCode: 'required|in:insufficientFunds'
    test_response_scripts:
      - name: Transaction was successfully Accepted
        rules:
          status: 'required|in:204'
    request:
      method: 'PUT'
      uri: '{{ steps.1.request.headers["X-Callback-URL"].0 }}'
      headers:
        Content-Type: 'application/json'
        X-Date: '{{ new_date_iso8601() }}'
      body:
        errorCategory: 'businessRule'
        errorCode: 'insufficientFunds'
    response:
      status: 204
